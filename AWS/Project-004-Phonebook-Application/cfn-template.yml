AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template creates an Phonebook Application deployed on AWS Application Load Balancer with Auto Scaling and RDS
Parameters:
  
Metadata:
  
Mappings:
  
Conditions:
  
Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables HTTP # Required
      SecurityGroupIngress:
        - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:  
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC

  ApplicationLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId
      Subnets: !Ref Subnet
      Type: application 

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - Type: forward
        TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLB # Required
      Port: 80
      Protocol: HTTP

  MyAutoScaling:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs 
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref myLaunchTemplate
        Version: "1"
      MaxSize: "3" # Required
      MinSize: "3" # Required
      TargetGroupARNs:
        TargetGroupARNs
          - !Ref ALBTargetGroup

  ScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref MyAutoScaling # Required
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60

  mylaunchtemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap
          - RegionImageMap
          - !Ref AWS::Region
          - AMI
        InstanceType: !Ref InstanceType  ******************
        KeyName: !Ref KeyPair *******************
        SecurityGroupIds:
          - !GetAtt ALBSecurityGroup.GroupId
        UserData: !Base64 |
          #! /bin/bash   ****************************

  MyRDSdbInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '5'
      DBInstanceClass: db.t2.micro # Required
      DBName: "String"
      DBSecurityGroups:
        - !Ref DatabaseSG
      Engine: MySQL
      MasterUserPassword: "String"
      MasterUsername: "String"

  DatabaseSG:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress: # Required
        - CIDRIP: 0.0.0.0/0 
      GroupDescription: Database security group # Required
    
      
      
  





Transform:
  
Outputs: